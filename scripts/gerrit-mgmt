#!/bin/bash -xe

if [ -e "/etc/environment" ]; then
    source /etc/environment
fi

if [ -e "/etc/farm-environment" ]; then
    source /etc/farm-environment
fi

GERRIT_DOCKER_DEFAULT_IMAGE='quay.io/swi-infra/gerrit:latest'
GERRIT_DOCKER_IMAGE=${GERRIT_DOCKER_IMAGE:-$GERRIT_DOCKER_DEFAULT_IMAGE}
GERRIT_DOCKER_NETWORK_NAME=${GERRIT_DOCKER_NETWORK_NAME:-gerrit}

if [ -z "$GERRIT_ROLE" ]; then
    if [[ "$MACHINE_TYPE" == "gerrit-mirror" ]]; then
        GERRIT_ROLE=mirror
    else
        GERRIT_ROLE=master
    fi
fi

# Kill/remove existing container
if docker inspect --type container gerrit; then
    docker kill gerrit || true
    docker rm --volumes gerrit || true
fi

docker pull "${GERRIT_DOCKER_IMAGE}"

# Create directories to store Gerrit files
mkdir -p /lstorage/services/gerrit/{review_site,.ssh}/
# Migrate from old location
if [ -e "/lstorage/services/gerrit/etc" ]; then
    mv /lstorage/services/gerrit/{etc,cache,index,plugins,logs,db,events-db,static} /lstorage/services/gerrit/review_site/
fi

chown -R 1000:1000 /lstorage/services/gerrit/{review_site,.ssh}/

# Generate private keys used for Gerrit SSH server
KEY_COMMENT="gerrit-code-review@$(hostname)"

if ! [ -e /lstorage/services/gerrit/ssh_host_rsa_key ]; then
    ssh-keygen -f /lstorage/services/gerrit/ssh_host_rsa_key -N '' -t 'rsa' -C "$KEY_COMMENT"
fi

if ! [ -e /lstorage/services/gerrit/ssh_host_dsa_key ]; then
    ssh-keygen -f /lstorage/services/gerrit/ssh_host_dsa_key -N '' -t 'dsa' -C "$KEY_COMMENT"
fi

if ! [ -e /lstorage/services/gerrit/ssh_host_ecdsa_key ]; then
    ssh-keygen -f /lstorage/services/gerrit/ssh_host_ecdsa_key -N '' -t 'ecdsa-sha2-nistp521' -C "$KEY_COMMENT"
fi

# Prepare configuration
rm -rf /tmp/gerrit-environment
if [ -e "/etc/gerrit-environment" ]; then
    cp /etc/gerrit-environment /tmp/gerrit-environment
else
    touch /tmp/gerrit-environment
fi

set_env() {
    local key=$1
    local value=$2

    echo "${key}=${value}" | tee -a /tmp/gerrit-environment
}

set_env JAVA_HEAPLIMIT "8g"
set_env WEBURL "https://${HOST_HOSTNAME}"

DOCKER_RUN_ARGS="--publish 29418:29418"

if [[ "$GERRIT_ROLE" == "master" ]]; then
    echo "Role: Master"

    if [ -z "$HOST_HOSTNAME" ]; then
        # Use IP for URL
        HOST_HOSTNAME="${COREOS_PRIVATE_IPV4}"
    else
        set_env VIRTUAL_HOST "${HOST_HOSTNAME}"
        set_env VIRTUAL_PORT "8080"

        set_env LETSENCRYPT_HOST "${HOST_HOSTNAME}"
    fi
    set_env HTTPD_LISTENURL "proxy-https://*:8080"

    set_env GET_PLUGINS "high-availability,avatars-gravatar,replication"

    if [ -n "$GERRIT_MIRROR_IPS" ]; then
        # SSH configuration for replication
        tee /lstorage/services/gerrit/.ssh/config <<SshConfig
Host *
    IdentityFile /var/gerrit/review_site/etc/ssh_host_rsa_key
    Port 22022
SshConfig

        rm -f /lstorage/services/gerrit/.ssh/known_hosts
        touch /lstorage/services/gerrit/.ssh/known_hosts

        for mirror in $(echo $GERRIT_MIRROR_IPS | tr ',' ' '); do
            # Accept host key
            ssh-keyscan -p 22022 -t rsa $mirror >> /lstorage/services/gerrit/.ssh/known_hosts

            # TODO: Update replication file
        done
    fi

elif [[ "$GERRIT_ROLE" == "mirror" ]]; then

    set_env JAVA_SLAVE "true"

else
    echo "Unknown role '$GERRIT_ROLE'"
    exit 1
fi

if ! docker network create "${GERRIT_DOCKER_NETWORK_NAME}"; then
    echo "Network already created"
fi

docker run \
            --name gerrit \
            --rm \
            --net "${GERRIT_DOCKER_NETWORK_NAME}" \
            ${DOCKER_RUN_ARGS} \
            --env-file /tmp/gerrit-environment \
            --volume /lstorage/services/gerrit/ssh_host_rsa_key:/var/gerrit/ssh_host_rsa_key \
            --volume /lstorage/services/gerrit/ssh_host_dsa_key:/var/gerrit/ssh_host_dsa_key \
            --volume /lstorage/services/gerrit/ssh_host_ecdsa_key:/var/gerrit/ssh_host_ecdsa_key \
            --volume /lstorage/services/gerrit/review_site/:/var/gerrit/review_site/ \
            --volume /lstorage/services/gerrit/.ssh/:/var/gerrit/.ssh/ \
            --volume /lstorage/git:/var/gerrit/review_site/git \
            ${GERRIT_DOCKER_IMAGE}

